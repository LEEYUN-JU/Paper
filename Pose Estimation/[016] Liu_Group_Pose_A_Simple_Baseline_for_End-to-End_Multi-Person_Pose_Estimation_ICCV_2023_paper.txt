<Abstract>
- 본 논문에서 집중적으로 보고자 하는 것은 multi-person end-to-end 자세 추정시에 발생하는 문제에 대해 연구하고자 한다.
- 현재 달성된 sota모델에서는 DETR-like 프레임 워크를 채택했으며, 복잡한 decoder구조를 가지고 있다는 특징이 있다.
- 우리는 단순한 transformer 기반의 방법을 제시하고자 한다.
- self-attention 모듈을 두개의 subsequent group으로 나누었다.
- 1) N within-instance self-attention 쿼리와, K 개의 keypoints 쿼리
- 2) (K+1)개의 same-type across-instance self-attention, 같은 유형의 N개의 쿼리
- 디코더는 최종적으로 across-instance type-different 쿼리를 통해 interaction에 해당하는 부분을 제거한 결과를 내놓고, 이를 통해 성능을 향상 시킬 수 있었다.

<Introduction>
- multi-person에 대한 자세 추정 모델을 end-to-end 프레임 워크로 설계했다.
- DETR 프레임 워크에서는, 트랜스포머의 인코더-디코더 구조를 따라했다.
- PETR은 체계적으로 키 포인트의 위치를 예측하고자 했고, 두개의 subsequent 디코더, pose 디코더, 그리고 joint 디코더를 사용했다.
- ED-Pose에서는 box 감지 문제로 보고, content 쿼리와 box 쿼리를 보도록 했다.
- single 쿼리를 사용하는 대신에, N X K 키포인트 쿼리를 사용하기로 했다. 
- N은 instance 쿼리를 뜻하고, K는 키포인트 자세 추정 예측에 사용되는 score를 뜻한다.
- 기본적으로 사용되는 self-attention 을 두개의 subsequent self-attention group으로 대체하였다.
- 첫 번째 그룹의 "self-attention"은 "N" 개의 병렬 self-attentions로 구성되며, 각 self-attention은 "K" 개의 keypoint queries와 해당 인스턴스 쿼리를 가지고 있습니다. 이것은 운동학적 관계를 활용하고 예측된 포즈에 대한 정보를 수집하기 위한 것입니다. 여기서 "N"은 인스턴스의 수, "K"는 각 인스턴스의 키포인트 쿼리 수를 나타냅니다.
- 두 번째 그룹의 "self-attention"은 이전과 같이 "K + 1" 병렬 self-attentions로 구성되며, 각 self-attention은 "N" 개의 동일한 유형의 쿼리를 가지고 있습니다. 이는 예측 정보의 중복을 수집하기 위한 것으로 원래 DETR에서 사용되던 self-attention과 유사합니다.
- 두 개의 self-attention 은 두 종류의 상호작용을 찾아내기 위함이다.
- (1) K개의 키포인트 쿼리 와 one instance 쿼리의 상관관계를 within N 만큼 찾아내는 것
- (2) (K+1) across-instance 상호작용인데 이는 같은 타입이며 N개의 쿼리에 걸쳐있다. (?)
- (3) 다른 type 들에 대해 across-instance 를 상호 적용하고자 한다
- 즉, 본 논문에서는 두 개의 interaction을 두 개의 subseqent group self-attention을 사용해 분리하고자 한다.
- 특히 같은 종류이며, 쿼리가 같은 사람에게 국한되었을때 정보를 찾는 경우에 한해서.

<Related Work>
- multi-person pose estimation 은 크게 end-to-end 방식과 아닌 방식으로 나누어 볼 수 있다.

[Non-end-to-end methods]
- top-down 방식의 경우 2-stage 방식이고, bottom-up 방식의 경우 one-stage방식으로 구성되어 있으며, 나머지 내용은 기존에 알던 지식과 별반 다르지 않은 내용이다.

[End-to-end methods]
- PETR과 DETR을 거론하며 간략하게 설명함.
- PETR의 경우, 최초로 joint decoder라는 것을 도입하여 사용함.
- QueryPose (Sparse R-CNN을 사용하고, RoIAlign 기반의 디코더를 사용함)
- ED-Pose (pose estimation 을 최초로 키 포인트 box detection에 대한 문제라고 언급함.
  총 두개의 쿼리를 사용하는데, human-to-keypoint 쿼리와 각 key points 들에 대한 box  쿼리를 사용함)

- 앞서 설명한 방법들은 너무 복잡하다. 따라서 본 논문에서는 간소화된 decoder를 사용한 방법을 제안하고자 한다.

<Group Pose>




<새롭게 알게 된 용어 & 다시 정리하는 용어>
- DETR (Detection with Transformer) : 네트워크 구조가 단순하면서 end-to-end가 가능한 DETR을 facebook 에서 공개함. 
  CNN Backbone + Transformer + FFN (Feed Forward Network)로 구성되어 있음.
  feautre는 CNN을 통해서 뽑아내고, 이를 transformer의 입력값이 될 수 있도록 가공해줌 > transformer의 결과값을 FFN을 통과  시킴
- PETR (Position Embedding Transformation) : 

<나중에 시도해 볼만한 것들 & 논문 뒷받침 참고가 될만한 내용>
- top-down 방식과 bottom-up 방식을 end-to-end 인지 아니면 non 인지에 따라서 구별하여 서술한 점이 흥미로웠음.

<참고한 블로그>
- https://wikidocs.net/145910 > DETR
- https://github.com/megvii-research/PETR

<논문 요약>

