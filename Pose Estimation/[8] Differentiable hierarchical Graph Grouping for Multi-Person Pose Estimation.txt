<Abstract>
- Multi-person 자세 추정에서 여러 사람의 키 포인트를 연속적으로 추정하는 것은 여전히 도전적인 과제로 남아 있다.
- bottom-up 방식이 top-down 방식보다 성능이 좋지만, 훨씬 어렵고 복잡하다.
- key-point detection과, heat-map을 찾아내는 것은 별개로 실행되며, 모델 학습시에도 별도로 학습시켜야 한다.
- 본 논문에서 우리는 human-part grouping에 대한 새로운 방법을 제시하고자 한다.
- HGG (Hierarchical Graph Grouping) 방법을 제안하고자 하는데, 이는 bottom-up multi-task 방법을 사용한다.
- HGG의 장점은, 기존에 존재하는 bottom-up method 모델에 embedding 하기 좋게 설계되었다는 것이다.

<Introduction>
- pose estimation 은 매주 중요한 task중에 하나인데, 이는 human behavior understanding, HCI, action recognition등에 기본 연구가 되기 때문이다.
- 기존에 존재하던 bottom-up 방식들은, 우선적으로 keypoint 를 추측하고, 그 다음 두번째 stage에서 이들을 grouping한다.
- AE 방식의 경우, 순서를 고려하지 않고 key point를 추출한 다음에, 사람별로 묶는다.
- grouping 하는 부분을 별도로 학습하지 않는데, 이를 별도로 학습시키면 좋은 성능을 얻을 수 있다.
- grouping하는 것과, key point detection을 통합 시키는 것이 어려운 도전 과제중 하나이다.
- 그것과, key point들이 항상 고정된 위치에 있는것이 아니기 때문에 이를 학습시키는 것이 어렵다.
- 이와 같은 문제를 해결하기 위해서, graph clustering 방법을 새로이 제시한다.
- 그래프는 이미지에 해당하며, 여기서 노드는 키포인트 제안을 나타내고 에지는 두 키포인트가 동일한 사용자에 속하는지 여부를 나타냅니다.
- 그래프 구조는 static graph 구성 대신에, 입력 이미지를 다르게 받아들이기 때문에, 다이나믹하게 사람의 keypoint 를 grouping 하는 것이 가능하다.
- 본 논문에서 특별히 강조하고 싶은 것은 OHGC(Online Hierarchical Graph Clustering)이다.
- 이는 keypoints들을 grouping하는 과정을 만들고, main-stream에 bottom-up 방식을 쉽게 적용 가능하게 만든다.
- keypoint를 제안하는 네트워크를 초기화 하고, OHGC알고리즘을 통해서 가장 연관성이 높은 것들끼리 묶는다. 
- OHGC에서는, key-points들을 순서대로 clustering한다. 
- 각 keypoints 에서 graph node를 시작점으로 잡고,  clustering 하면서 group 별로 합쳐지게된다.
- 이 과정은 global한 특징에 집중하도록 도와주며, pairwise relation을 예측하는데 효과적일 수 있게 해준다.
- 이와 같이 supervising된 결과는 back-propagation 과정에서 직전의 keypoint detection 에 더 영향을 미치게 된다.
- edge discriminator 역시 제안하고자 하는데, 이는 global consistency를 강화한다.
- 이는 몸의 keypoint 관계성에 관한 특징을 더 잘 구분하는데 도움을 준다.

[3-main contribution]
- multi-person 에 대한 pose-estimation시에, graph clustering 을 재정의하고, fully end-to-end과정을 제안한다.
- edge discriminator 과 macro-node discriminator를 제안하는데, 이 두가지를 통해 local 하고 global pairwise feautre를 더 잘 학습 할 수 있으며, grouping 에 대한 정확도 역시 높인다.
- SOTA 달성했음.

<Related Works>
[Top-down]
- bounding box로 사람 먼저 찾고 pose estimation 함.

[Bottom-up]
- top-down 보다 속도가 빠르지만, post-processing 하는 부분에서 joint에 관한 것을 학습하지 않았기에 정확도가 떨어지고, 본 논문에서는 이러한 단점을 개선시켰다.

[Single-stage pose estimation]
- 우선 사람의 center를 찾고, 그 다음에 사람의 key point를 찾아서 자세를 추정하는 기법을 많이 사용한다.
- 이 경우에는 bounding box 에 의존하지 않아도 된다.
- 하지만, key point regression 은 정확하지 않고, IoU로 성능평가하는 경우에 매우 엄격하다.
- 반면의 우리의 방식은 IoU방식에도 강건하고, 좋은 예측 성능을 보여준다.

[Graph Representation for Pose Estimation]
- single-person을 detection 하는데에는 많은 방법들이 있다.
- Mixtures-of-parts, MRF (Markov Random Fields), CRF (Conditional Random Fields)가 있다. 
- 이러한 것들 중에, graph node는 keypoints를 대표하고, edges 들은 keypoints 간의 pairwise relationship 을 대표한다.
- 만약 keypoint들이 한 사람의 것이라고 결과가 나온다면, 더이상 grouping 하는 과정은 진행되지 않는다.
- 게다가, 한 사람에게서 추정 가능한 keypoint의 개수는 항상 한정되어 있으며, 따라서 그래프 구조 역시 node개수와 edge개수가 한정되어 있다.
- 그렇기에 multi-person pose estimation 과제가 더욱이 어려운 것이다.
- pose estimation과제는 graph partitioning 기반의 ILP (integer linear programming) 문제이다.
- 게다가 실시간이 아니고, time-consuming 하다.
- 논문 [37]에서는, 이와 같은 문제를 해결하기 위해서 연산량을 줄이고, CRF optimization에 초점을 두어서, 직접적으로 graph clustering하는 방법을 제시하여, pose estimation 문제를 해결하였다.

[Graph Neural Networks]
- 본 논문에서는 graph representation을 통해서 multi-person pose estimation 을 해결하고자 하였다.
- GNN (Graph Neural Networks) 는 global relations 간의 정보 전달에 효율적인 툴이다.
- 대부분의 GNN은 크게 두 가지로 분류될 수 있는데, spectral 한 접근법과 그렇지 않은 접근법으로 나누어서 생각해 볼 수 있다.
- 논문 [45]에 기반하여 hierarchical clustering 방법을 제안한다.
- body 구조 제약을 고려하여, 전체 그룹화 과정을 모델링하는 hierachical clustering 방법을 개발했다.
- 최근 GNN은 사람의 신체 구조에도 적용된다. (?)
- 사람의 구조를 파악하는것에 집중하는 연구들이 진행된다.

<Method>
- HGG framework는 총 two stage로 구성된다. 
- key points 후보 제안 stage 와 keypoint grouping stage로 구성된다.
- 키포인트 제안 단계에서는, 키 포인트로 추정 가능한 모든 후보군이 감지되고, 이는 피쳐 맵으로 추출된다.
- 4-stacked hourglass를 키포인트 후보군 추출의 backbone 모델로 사용한다.
- 키포인트 그룹핑 단계에서는 이전 단계에서 추출된 피쳐들을 기반으로 그룹핑한다.
- OHGC (Online Hierarchical Graph Clustering) 알고리즘을 이용하여, 키포인트 들을 clustering한다.
- 각 iteration 에서, OHGC는 pairwise relation feature를 업데이트 하고, weighted edge score를 최대로 함으로써, node들을 macro-node로 cluster한다.
- 그래프는 업데이트 되고, macro-node로 프루닝 된다.
- linear programming 혹은 bipartite matching 과 반대로, 제안되는 방법은 end-to-end keypoint detection을 가능하게 한다.
- grouping 과정을 강화시키기 위해서, edge discriminator와 macro-node discriminator를 제안한다.
- 각 iteration안에서, edge discriminator는 node가 같은 사람에게 속해 있는지 구분해내는 역할을 한다.
- pairwise realtion features 과 edge scores는 자동으로 업데이트 된다.
- macro-node discriminator는 제대로 clustered macro-node 된 것인지 아닌지를 구분하는데 사용된다.

[Hierarchical Graph Grouping]
- 기존의 방법들은 graph partitioning을 통해서 ILP 문제를 해결했지만, 이는 offline에서 수행되고, 모든 키포인트 후보군에 대해서 학습하는게 쉽지 않았다.
- 이에 본 논문에서는, graph partitioning 하고 supervised learning을 통해 상기 문제를 해결하고자 했다.
- online agglomerative setting을 통해서 해결하고자 함.
- 단일 사람에 해당되는 키포인트라면, 각 키포인트 후보군들은 각자가 cluster의 시작점이 되고, cluster 하고 merge한다.

[Graph Construction]
- 같은 사람에게 해당되는 keypoint 인지 아닌지를 판별한다.
- fully-connected graph를 선택했는데, 이는 키포인트 타입이 달라도, 모든 키포인트들이 pair 를 가질 수 있게 하기 위함이다
- fully-connected graph는 occlusion 현상이 일어났을때, single-person을 다양한 cluster로 분류해서 over-segment를 방지해준다.
- 그래프 내에서 각기 vertex는 다음의 특징들을 concatenation 한다.
- 1) 키포인트의 특징을 relationnal embedding 한다.
- 2) 키포인트 타입을 one hot feature로 encode한다.
- 3) 키포인트의 (x, y) 좌표가 [0, 1]로 normalized된다.

[Online Hierarchical Graph Clustering Algorithm] - Fig 3 참조
- vertices 간에 message passing을 통해서 정보를 공유한다.
- 효율적인 feature 학습을 위해서 EgdeConv를 쌓았다.
- 각 EdgeConv layer에서는, 각 edge feature를 fully-connected 된 레이어의 node에서 추출된 feature를 concatenation 하여 mapping 한다.
- 그리고 node feature는 각 edges에서 연관있는 것들끼리 통합시킨다.
- high-order를 고려하지 않고 오로지 body-part만 고려한다.
- 상기 과정을 더이상 egde가 더이상 존재하지 않을때 까지 반복한다.
- 가장 confidence가 강한 부분과 clustering 이 강한 부분을 edge weight을 max함으로써 찾아낸다.
- grouping 조건은 두개가 있는데, 1) 한 키포인트가 두사람에게 귀속되지 않게 해야함. ex) 키포인트를 공유하는 두사람 존재 불가
- 2) 한 사람이 두 개의 특정 키포인트를 포함 할 수 없다. ex) 한 사람이 머리 두 개 키포인트를 가질 수 없음.
- 2번 조건을 만족시키기 위해서 매 iteration 후에 group pruning을 진행하고, 이는 edge 를 pruning 하고, 이는 모든 edge들이 다 pruning 될때까지 진행된다.
- 최종적으로 K개의 사람에 해당하는 K개의 그룹 키포인트를 얻어낼 수 있다.

<Grouping Discriminators>
- 매 iteration 마다 edge discriminator 는 대략적인 스코어를 업데이트 하고, macro-node discriminator는 잘못 group된 macro-node를 suppress한다.

[Edge Discriminator]
- edge의 연결 여부(0: 연결안됨, 1: 연결됨, 같은 사람임)를 통해, 키포인트가 같은 사람의 것인지 아닌지 판별한다. 

[Macro-node Discriminator]
- 각 grouping iteration후에, 모든 키포인트 후보군들이 같은 사람에 속하는지 아닌지를 판별한다. (1 : 같은 사람임, 0: 다른 사람임)
- discriminator는 macro-node에서의 feature를 통합한다.

<Ablation study>
- End-to-End learning의 효과
- Edge Discriminator의 효과
- Macro-Node Discriminator의 효과
- GNN의 효과
- 다른 Graph Configuration의 효과

<새롭게 알게 된 용어 & 다시 정리하는 용어>
- time-consuming : 시간이 걸린다
-  AE : Associate Embedding, 각 사람별로 tag를 부착해서 multi-person pose estimation 을 더 잘하게 만들어줌.
- MRF : Markov Random Fields
- CRF : Conditional Random Fields
- OHGC : Online Hierarchical Graph Clustering
- ILP : Integer Linear Programming
- agglomerative : 덩어리가 되는, 응집하는

<논문 요약>
- multi-person pose estimation 을 새로운 방법으로 시도하고자 함
- HGG라고 이름 붙인 end-to-end 방법을 제시함
- 기존에 two stage 로 나뉘어서 평가되기 때문에 clustering 하는 부분은 따로 학습되지 않았는데, 이를 별도로 학습하게 하여 모델의 정확성을 높임
- 각 feature간의 관계성을 학습하거나, 버리는 방식을 취함으로써, 모델의 효율성을 높임
- Dicriminator를 도입함으로써, 모델 내에서 학습시에, 도출된 결과가 적절한지에 대한 판단을 미리 함

<나중에 시도해 볼만한 것들 & 논문 뒷받침 참고가 될만한 내용>
- multi-person 기준이고, GNN기반이기 때문에 별도로 참고사항 없음
- 하지만 나중에 clustering 하는 부분을 추가하면? 어떻게 될지 궁금하기도? ex) bounding box 내에서 찾은 key point 들의 연관성 파악하기 > 두사람이 겹쳐져 있는 경우에 유용할지도?

<참고한 블로그>
